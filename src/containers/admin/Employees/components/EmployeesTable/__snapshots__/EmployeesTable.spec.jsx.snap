// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The snapshot matches 1`] = `
<EmployeesTable
  dataSource={Array []}
  deleteEmployee={[Function]}
  loading={false}
  openEmployee={[Function]}
>
  <ForwardRef(InternalTable)
    className="my-list"
    columns={
      Array [
        Object {
          "dataIndex": "name",
          "render": [Function],
          "title": "NOMBRE",
        },
        Object {
          "dataIndex": "age",
          "title": "EDAD",
        },
        Object {
          "dataIndex": "salary",
          "render": [Function],
          "title": "SALARIO",
        },
        Object {
          "dataIndex": "email",
          "title": "EMAIL",
        },
        Object {
          "align": "right",
          "fixed": "right",
          "render": [Function],
          "title": "ACCIONES",
        },
      ]
    }
    dataSource={Array []}
    itemLayout="horizontal"
    loading={false}
    pagination={false}
    rowKey="id"
  >
    <div
      className="ant-table-wrapper my-list"
    >
      <Spin
        size="default"
        spinning={false}
        wrapperClassName=""
      >
        <div
          className="ant-spin-nested-loading"
        >
          <div
            className="ant-spin-container"
            key="container"
          >
            <Table
              className="ant-table-empty"
              columns={
                Array [
                  Object {
                    "dataIndex": "name",
                    "render": [Function],
                    "title": "NOMBRE",
                  },
                  Object {
                    "dataIndex": "age",
                    "title": "EDAD",
                  },
                  Object {
                    "dataIndex": "salary",
                    "render": [Function],
                    "title": "SALARIO",
                  },
                  Object {
                    "dataIndex": "email",
                    "title": "EMAIL",
                  },
                  Object {
                    "align": "right",
                    "fixed": "right",
                    "render": [Function],
                    "title": "ACCIONES",
                  },
                ]
              }
              data={Array []}
              dataSource={Array []}
              emptyText={
                <Context.Consumer>
                  [Function]
                </Context.Consumer>
              }
              expandable={
                Object {
                  "__PARENT_RENDER_ICON__": undefined,
                  "childrenColumnName": undefined,
                  "expandIcon": [Function],
                  "expandIconColumnIndex": undefined,
                  "indentSize": 15,
                }
              }
              internalHooks="rc-table-internal-hook"
              internalRefs={
                Object {
                  "body": Object {
                    "current": <div
                      class="ant-table-content"
                    >
                      <table
                        style="table-layout: auto;"
                      >
                        <colgroup />
                        <thead
                          class="ant-table-thead"
                        >
                          <tr>
                            <th
                              class="ant-table-cell"
                            >
                              NOMBRE
                            </th>
                            <th
                              class="ant-table-cell"
                            >
                              EDAD
                            </th>
                            <th
                              class="ant-table-cell"
                            >
                              SALARIO
                            </th>
                            <th
                              class="ant-table-cell"
                            >
                              EMAIL
                            </th>
                            <th
                              class="ant-table-cell ant-table-cell-fix-right ant-table-cell-fix-right-first"
                              style="text-align: right; position: sticky; right: 0px;"
                            >
                              ACCIONES
                            </th>
                          </tr>
                        </thead>
                        <tbody
                          class="ant-table-tbody"
                        >
                          <tr
                            class="ant-table-placeholder"
                          >
                            <td
                              class="ant-table-cell"
                              colspan="5"
                            >
                              <div
                                class="ant-empty ant-empty-normal"
                              >
                                <div
                                  class="ant-empty-image"
                                >
                                  <svg
                                    class="ant-empty-img-simple"
                                    height="41"
                                    viewBox="0 0 64 41"
                                    width="64"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <g
                                      fill="none"
                                      fill-rule="evenodd"
                                      transform="translate(0 1)"
                                    >
                                      <ellipse
                                        class="ant-empty-img-simple-ellipse"
                                        cx="32"
                                        cy="33"
                                        rx="32"
                                        ry="7"
                                      />
                                      <g
                                        class="ant-empty-img-simple-g"
                                        fill-rule="nonzero"
                                      >
                                        <path
                                          d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                        />
                                        <path
                                          class="ant-empty-img-simple-path"
                                          d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                        />
                                      </g>
                                    </g>
                                  </svg>
                                </div>
                                <div
                                  class="ant-empty-description"
                                >
                                  No Data
                                </div>
                              </div>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                    </div>,
                  },
                }
              }
              itemLayout="horizontal"
              loading={false}
              pagination={false}
              prefixCls="ant-table"
              rowClassName={[Function]}
              rowKey={[Function]}
              transformColumns={[Function]}
            >
              <div
                className="ant-table ant-table-empty ant-table-has-fix-right"
              >
                <Component
                  pingLeft={false}
                  pingRight={false}
                  props={
                    Object {
                      "className": "ant-table-empty",
                      "columns": Array [
                        Object {
                          "dataIndex": "name",
                          "render": [Function],
                          "title": "NOMBRE",
                        },
                        Object {
                          "dataIndex": "age",
                          "title": "EDAD",
                        },
                        Object {
                          "dataIndex": "salary",
                          "render": [Function],
                          "title": "SALARIO",
                        },
                        Object {
                          "dataIndex": "email",
                          "title": "EMAIL",
                        },
                        Object {
                          "align": "right",
                          "fixed": "right",
                          "render": [Function],
                          "title": "ACCIONES",
                        },
                      ],
                      "data": Array [],
                      "dataSource": Array [],
                      "direction": undefined,
                      "emptyText": <Context.Consumer>
                        [Function]
                      </Context.Consumer>,
                      "expandable": Object {
                        "__PARENT_RENDER_ICON__": undefined,
                        "childrenColumnName": undefined,
                        "expandIcon": [Function],
                        "expandIconColumnIndex": undefined,
                        "indentSize": 15,
                      },
                      "internalHooks": "rc-table-internal-hook",
                      "internalRefs": Object {
                        "body": Object {
                          "current": <div
                            class="ant-table-content"
                          >
                            <table
                              style="table-layout: auto;"
                            >
                              <colgroup />
                              <thead
                                class="ant-table-thead"
                              >
                                <tr>
                                  <th
                                    class="ant-table-cell"
                                  >
                                    NOMBRE
                                  </th>
                                  <th
                                    class="ant-table-cell"
                                  >
                                    EDAD
                                  </th>
                                  <th
                                    class="ant-table-cell"
                                  >
                                    SALARIO
                                  </th>
                                  <th
                                    class="ant-table-cell"
                                  >
                                    EMAIL
                                  </th>
                                  <th
                                    class="ant-table-cell ant-table-cell-fix-right ant-table-cell-fix-right-first"
                                    style="text-align: right; position: sticky; right: 0px;"
                                  >
                                    ACCIONES
                                  </th>
                                </tr>
                              </thead>
                              <tbody
                                class="ant-table-tbody"
                              >
                                <tr
                                  class="ant-table-placeholder"
                                >
                                  <td
                                    class="ant-table-cell"
                                    colspan="5"
                                  >
                                    <div
                                      class="ant-empty ant-empty-normal"
                                    >
                                      <div
                                        class="ant-empty-image"
                                      >
                                        <svg
                                          class="ant-empty-img-simple"
                                          height="41"
                                          viewBox="0 0 64 41"
                                          width="64"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <g
                                            fill="none"
                                            fill-rule="evenodd"
                                            transform="translate(0 1)"
                                          >
                                            <ellipse
                                              class="ant-empty-img-simple-ellipse"
                                              cx="32"
                                              cy="33"
                                              rx="32"
                                              ry="7"
                                            />
                                            <g
                                              class="ant-empty-img-simple-g"
                                              fill-rule="nonzero"
                                            >
                                              <path
                                                d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                              />
                                              <path
                                                class="ant-empty-img-simple-path"
                                                d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                              />
                                            </g>
                                          </g>
                                        </svg>
                                      </div>
                                      <div
                                        class="ant-empty-description"
                                      >
                                        No Data
                                      </div>
                                    </div>
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                          </div>,
                        },
                      },
                      "itemLayout": "horizontal",
                      "loading": false,
                      "mergedExpandedKeys": Set {},
                      "pagination": false,
                      "prefixCls": "ant-table",
                      "rowClassName": [Function],
                      "rowKey": [Function],
                      "stickyOffsets": Object {
                        "left": Array [
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                        "right": Array [
                          0,
                          0,
                          0,
                          0,
                          0,
                        ],
                      },
                      "transformColumns": [Function],
                    }
                  }
                >
                  <div
                    className="ant-table-container"
                  >
                    <div
                      className="ant-table-content"
                      onScroll={[Function]}
                      style={Object {}}
                    >
                      <table
                        style={
                          Object {
                            "tableLayout": "auto",
                          }
                        }
                      >
                        <ColGroup
                          colWidths={
                            Array [
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                            ]
                          }
                          columns={
                            Array [
                              Object {
                                "dataIndex": "name",
                                "fixed": undefined,
                                "render": [Function],
                                "title": "NOMBRE",
                              },
                              Object {
                                "dataIndex": "age",
                                "fixed": undefined,
                                "title": "EDAD",
                              },
                              Object {
                                "dataIndex": "salary",
                                "fixed": undefined,
                                "render": [Function],
                                "title": "SALARIO",
                              },
                              Object {
                                "dataIndex": "email",
                                "fixed": undefined,
                                "title": "EMAIL",
                              },
                              Object {
                                "align": "right",
                                "fixed": "right",
                                "render": [Function],
                                "title": "ACCIONES",
                              },
                            ]
                          }
                        >
                          <colgroup />
                        </ColGroup>
                        <Header
                          colWidths={
                            Array [
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                              undefined,
                            ]
                          }
                          columCount={5}
                          columns={
                            Array [
                              Object {
                                "dataIndex": "name",
                                "render": [Function],
                                "title": "NOMBRE",
                              },
                              Object {
                                "dataIndex": "age",
                                "title": "EDAD",
                              },
                              Object {
                                "dataIndex": "salary",
                                "render": [Function],
                                "title": "SALARIO",
                              },
                              Object {
                                "dataIndex": "email",
                                "title": "EMAIL",
                              },
                              Object {
                                "align": "right",
                                "fixed": "right",
                                "render": [Function],
                                "title": "ACCIONES",
                              },
                            ]
                          }
                          flattenColumns={
                            Array [
                              Object {
                                "dataIndex": "name",
                                "fixed": undefined,
                                "render": [Function],
                                "title": "NOMBRE",
                              },
                              Object {
                                "dataIndex": "age",
                                "fixed": undefined,
                                "title": "EDAD",
                              },
                              Object {
                                "dataIndex": "salary",
                                "fixed": undefined,
                                "render": [Function],
                                "title": "SALARIO",
                              },
                              Object {
                                "dataIndex": "email",
                                "fixed": undefined,
                                "title": "EMAIL",
                              },
                              Object {
                                "align": "right",
                                "fixed": "right",
                                "render": [Function],
                                "title": "ACCIONES",
                              },
                            ]
                          }
                          stickyOffsets={
                            Object {
                              "left": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                              "right": Array [
                                0,
                                0,
                                0,
                                0,
                                0,
                              ],
                            }
                          }
                        >
                          <thead
                            className="ant-table-thead"
                          >
                            <HeaderRow
                              cellComponent="th"
                              cells={
                                Array [
                                  Object {
                                    "children": "NOMBRE",
                                    "className": "",
                                    "colEnd": 0,
                                    "colSpan": 1,
                                    "colStart": 0,
                                    "column": Object {
                                      "dataIndex": "name",
                                      "render": [Function],
                                      "title": "NOMBRE",
                                    },
                                    "key": undefined,
                                    "rowSpan": 1,
                                  },
                                  Object {
                                    "children": "EDAD",
                                    "className": "",
                                    "colEnd": 1,
                                    "colSpan": 1,
                                    "colStart": 1,
                                    "column": Object {
                                      "dataIndex": "age",
                                      "title": "EDAD",
                                    },
                                    "key": undefined,
                                    "rowSpan": 1,
                                  },
                                  Object {
                                    "children": "SALARIO",
                                    "className": "",
                                    "colEnd": 2,
                                    "colSpan": 1,
                                    "colStart": 2,
                                    "column": Object {
                                      "dataIndex": "salary",
                                      "render": [Function],
                                      "title": "SALARIO",
                                    },
                                    "key": undefined,
                                    "rowSpan": 1,
                                  },
                                  Object {
                                    "children": "EMAIL",
                                    "className": "",
                                    "colEnd": 3,
                                    "colSpan": 1,
                                    "colStart": 3,
                                    "column": Object {
                                      "dataIndex": "email",
                                      "title": "EMAIL",
                                    },
                                    "key": undefined,
                                    "rowSpan": 1,
                                  },
                                  Object {
                                    "children": "ACCIONES",
                                    "className": "",
                                    "colEnd": 4,
                                    "colSpan": 1,
                                    "colStart": 4,
                                    "column": Object {
                                      "align": "right",
                                      "fixed": "right",
                                      "render": [Function],
                                      "title": "ACCIONES",
                                    },
                                    "key": undefined,
                                    "rowSpan": 1,
                                  },
                                ]
                              }
                              flattenColumns={
                                Array [
                                  Object {
                                    "dataIndex": "name",
                                    "fixed": undefined,
                                    "render": [Function],
                                    "title": "NOMBRE",
                                  },
                                  Object {
                                    "dataIndex": "age",
                                    "fixed": undefined,
                                    "title": "EDAD",
                                  },
                                  Object {
                                    "dataIndex": "salary",
                                    "fixed": undefined,
                                    "render": [Function],
                                    "title": "SALARIO",
                                  },
                                  Object {
                                    "dataIndex": "email",
                                    "fixed": undefined,
                                    "title": "EMAIL",
                                  },
                                  Object {
                                    "align": "right",
                                    "fixed": "right",
                                    "render": [Function],
                                    "title": "ACCIONES",
                                  },
                                ]
                              }
                              index={0}
                              key="0"
                              rowComponent="tr"
                              stickyOffsets={
                                Object {
                                  "left": Array [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "right": Array [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                }
                              }
                            >
                              <tr>
                                <WrappedCell
                                  className=""
                                  colEnd={0}
                                  colSpan={1}
                                  colStart={0}
                                  column={
                                    Object {
                                      "dataIndex": "name",
                                      "render": [Function],
                                      "title": "NOMBRE",
                                    }
                                  }
                                  component="th"
                                  firstFixLeft={false}
                                  firstFixRight={false}
                                  key="name"
                                  lastFixLeft={false}
                                  lastFixRight={false}
                                  prefixCls="ant-table"
                                  rowSpan={1}
                                  rowType="header"
                                >
                                  <Cell
                                    className=""
                                    colEnd={0}
                                    colSpan={1}
                                    colStart={0}
                                    column={
                                      Object {
                                        "dataIndex": "name",
                                        "render": [Function],
                                        "title": "NOMBRE",
                                      }
                                    }
                                    component="th"
                                    firstFixLeft={false}
                                    firstFixRight={false}
                                    hovering={false}
                                    lastFixLeft={false}
                                    lastFixRight={false}
                                    prefixCls="ant-table"
                                    rowSpan={1}
                                    rowType="header"
                                  >
                                    <th
                                      className="ant-table-cell"
                                      colSpan={null}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      rowSpan={null}
                                      style={Object {}}
                                    >
                                      NOMBRE
                                    </th>
                                  </Cell>
                                </WrappedCell>
                                <WrappedCell
                                  className=""
                                  colEnd={1}
                                  colSpan={1}
                                  colStart={1}
                                  column={
                                    Object {
                                      "dataIndex": "age",
                                      "title": "EDAD",
                                    }
                                  }
                                  component="th"
                                  firstFixLeft={false}
                                  firstFixRight={false}
                                  key="age"
                                  lastFixLeft={false}
                                  lastFixRight={false}
                                  prefixCls="ant-table"
                                  rowSpan={1}
                                  rowType="header"
                                >
                                  <Cell
                                    className=""
                                    colEnd={1}
                                    colSpan={1}
                                    colStart={1}
                                    column={
                                      Object {
                                        "dataIndex": "age",
                                        "title": "EDAD",
                                      }
                                    }
                                    component="th"
                                    firstFixLeft={false}
                                    firstFixRight={false}
                                    hovering={false}
                                    lastFixLeft={false}
                                    lastFixRight={false}
                                    prefixCls="ant-table"
                                    rowSpan={1}
                                    rowType="header"
                                  >
                                    <th
                                      className="ant-table-cell"
                                      colSpan={null}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      rowSpan={null}
                                      style={Object {}}
                                    >
                                      EDAD
                                    </th>
                                  </Cell>
                                </WrappedCell>
                                <WrappedCell
                                  className=""
                                  colEnd={2}
                                  colSpan={1}
                                  colStart={2}
                                  column={
                                    Object {
                                      "dataIndex": "salary",
                                      "render": [Function],
                                      "title": "SALARIO",
                                    }
                                  }
                                  component="th"
                                  firstFixLeft={false}
                                  firstFixRight={false}
                                  key="salary"
                                  lastFixLeft={false}
                                  lastFixRight={false}
                                  prefixCls="ant-table"
                                  rowSpan={1}
                                  rowType="header"
                                >
                                  <Cell
                                    className=""
                                    colEnd={2}
                                    colSpan={1}
                                    colStart={2}
                                    column={
                                      Object {
                                        "dataIndex": "salary",
                                        "render": [Function],
                                        "title": "SALARIO",
                                      }
                                    }
                                    component="th"
                                    firstFixLeft={false}
                                    firstFixRight={false}
                                    hovering={false}
                                    lastFixLeft={false}
                                    lastFixRight={false}
                                    prefixCls="ant-table"
                                    rowSpan={1}
                                    rowType="header"
                                  >
                                    <th
                                      className="ant-table-cell"
                                      colSpan={null}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      rowSpan={null}
                                      style={Object {}}
                                    >
                                      SALARIO
                                    </th>
                                  </Cell>
                                </WrappedCell>
                                <WrappedCell
                                  className=""
                                  colEnd={3}
                                  colSpan={1}
                                  colStart={3}
                                  column={
                                    Object {
                                      "dataIndex": "email",
                                      "title": "EMAIL",
                                    }
                                  }
                                  component="th"
                                  firstFixLeft={false}
                                  firstFixRight={false}
                                  key="email"
                                  lastFixLeft={false}
                                  lastFixRight={false}
                                  prefixCls="ant-table"
                                  rowSpan={1}
                                  rowType="header"
                                >
                                  <Cell
                                    className=""
                                    colEnd={3}
                                    colSpan={1}
                                    colStart={3}
                                    column={
                                      Object {
                                        "dataIndex": "email",
                                        "title": "EMAIL",
                                      }
                                    }
                                    component="th"
                                    firstFixLeft={false}
                                    firstFixRight={false}
                                    hovering={false}
                                    lastFixLeft={false}
                                    lastFixRight={false}
                                    prefixCls="ant-table"
                                    rowSpan={1}
                                    rowType="header"
                                  >
                                    <th
                                      className="ant-table-cell"
                                      colSpan={null}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      rowSpan={null}
                                      style={Object {}}
                                    >
                                      EMAIL
                                    </th>
                                  </Cell>
                                </WrappedCell>
                                <WrappedCell
                                  align="right"
                                  className=""
                                  colEnd={4}
                                  colSpan={1}
                                  colStart={4}
                                  column={
                                    Object {
                                      "align": "right",
                                      "fixed": "right",
                                      "render": [Function],
                                      "title": "ACCIONES",
                                    }
                                  }
                                  component="th"
                                  firstFixLeft={false}
                                  firstFixRight={true}
                                  fixRight={0}
                                  key="RC_TABLE_KEY"
                                  lastFixLeft={false}
                                  lastFixRight={false}
                                  prefixCls="ant-table"
                                  rowSpan={1}
                                  rowType="header"
                                >
                                  <Cell
                                    align="right"
                                    className=""
                                    colEnd={4}
                                    colSpan={1}
                                    colStart={4}
                                    column={
                                      Object {
                                        "align": "right",
                                        "fixed": "right",
                                        "render": [Function],
                                        "title": "ACCIONES",
                                      }
                                    }
                                    component="th"
                                    firstFixLeft={false}
                                    firstFixRight={true}
                                    fixRight={0}
                                    hovering={false}
                                    lastFixLeft={false}
                                    lastFixRight={false}
                                    prefixCls="ant-table"
                                    rowSpan={1}
                                    rowType="header"
                                  >
                                    <th
                                      className="ant-table-cell ant-table-cell-fix-right ant-table-cell-fix-right-first"
                                      colSpan={null}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      rowSpan={null}
                                      style={
                                        Object {
                                          "position": "sticky",
                                          "right": 0,
                                          "textAlign": "right",
                                        }
                                      }
                                    >
                                      ACCIONES
                                    </th>
                                  </Cell>
                                </WrappedCell>
                              </tr>
                            </HeaderRow>
                          </thead>
                        </Header>
                        <Body
                          childrenColumnName="children"
                          data={Array []}
                          emptyNode={
                            <Context.Consumer>
                              [Function]
                            </Context.Consumer>
                          }
                          expandedKeys={Set {}}
                          getRowKey={[Function]}
                          measureColumnWidth={false}
                        >
                          <tbody
                            className="ant-table-tbody"
                          >
                            <ExpandedRow
                              cellComponent="td"
                              className="ant-table-placeholder"
                              colSpan={5}
                              component="tr"
                              expanded={true}
                              isEmpty={true}
                              prefixCls="ant-table"
                            >
                              <tr
                                className="ant-table-placeholder"
                                style={
                                  Object {
                                    "display": null,
                                  }
                                }
                              >
                                <WrappedCell
                                  colSpan={5}
                                  component="td"
                                  prefixCls="ant-table"
                                >
                                  <Cell
                                    colSpan={5}
                                    component="td"
                                    hovering={false}
                                    onHover={[Function]}
                                    prefixCls="ant-table"
                                  >
                                    <td
                                      className="ant-table-cell"
                                      colSpan={5}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      rowSpan={null}
                                      style={Object {}}
                                    >
                                      <Empty
                                        image={<Simple />}
                                      >
                                        <LocaleReceiver
                                          componentName="Empty"
                                        >
                                          <div
                                            className="ant-empty ant-empty-normal"
                                          >
                                            <div
                                              className="ant-empty-image"
                                            >
                                              <Simple>
                                                <svg
                                                  className="ant-empty-img-simple"
                                                  height="41"
                                                  viewBox="0 0 64 41"
                                                  width="64"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <g
                                                    fill="none"
                                                    fillRule="evenodd"
                                                    transform="translate(0 1)"
                                                  >
                                                    <ellipse
                                                      className="ant-empty-img-simple-ellipse"
                                                      cx="32"
                                                      cy="33"
                                                      rx="32"
                                                      ry="7"
                                                    />
                                                    <g
                                                      className="ant-empty-img-simple-g"
                                                      fillRule="nonzero"
                                                    >
                                                      <path
                                                        d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                      />
                                                      <path
                                                        className="ant-empty-img-simple-path"
                                                        d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                      />
                                                    </g>
                                                  </g>
                                                </svg>
                                              </Simple>
                                            </div>
                                            <div
                                              className="ant-empty-description"
                                            >
                                              No Data
                                            </div>
                                          </div>
                                        </LocaleReceiver>
                                      </Empty>
                                    </td>
                                  </Cell>
                                </WrappedCell>
                              </tr>
                            </ExpandedRow>
                          </tbody>
                        </Body>
                      </table>
                    </div>
                  </div>
                </Component>
              </div>
            </Table>
          </div>
        </div>
      </Spin>
    </div>
  </ForwardRef(InternalTable)>
  <div
    className="pagination-container"
  >
    <ForwardRef(InternalSelect)
      onChange={[Function]}
      value={5}
    >
      <Select
        className=""
        clearIcon={<ForwardRef(CloseCircleFilled) />}
        dropdownClassName=""
        inputIcon={[Function]}
        listHeight={256}
        listItemHeight={24}
        menuItemSelectedIcon={null}
        notFoundContent={
          <Context.Consumer>
            [Function]
          </Context.Consumer>
        }
        onChange={[Function]}
        placement="bottomLeft"
        prefixCls="ant-select"
        removeIcon={<ForwardRef(CloseOutlined) />}
        transitionName="ant-slide-up"
        value={5}
      >
        <BaseSelect
          OptionList={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            }
          }
          activeDescendantId="rc_select_TEST_OR_SSR_list_0"
          activeValue={null}
          className=""
          clearIcon={<ForwardRef(CloseCircleFilled) />}
          displayValues={
            Array [
              Object {
                "disabled": undefined,
                "key": 5,
                "label": "5",
                "value": 5,
              },
            ]
          }
          dropdownClassName=""
          dropdownMatchSelectWidth={true}
          emptyOptions={false}
          id="rc_select_TEST_OR_SSR"
          inputIcon={[Function]}
          notFoundContent={
            <Context.Consumer>
              [Function]
            </Context.Consumer>
          }
          omitDomProps={
            Array [
              "inputValue",
            ]
          }
          onDisplayValuesChange={[Function]}
          onSearch={[Function]}
          onSearchSplit={[Function]}
          placement="bottomLeft"
          prefixCls="ant-select"
          removeIcon={<ForwardRef(CloseOutlined) />}
          searchValue=""
          transitionName="ant-slide-up"
        >
          <div
            className="ant-select ant-select-single ant-select-show-arrow"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
          >
            <SelectTrigger
              containerWidth={null}
              dropdownClassName=""
              dropdownMatchSelectWidth={true}
              empty={false}
              getTriggerDOMNode={[Function]}
              onPopupMouseEnter={[Function]}
              placement="bottomLeft"
              popupElement={<OptionList />}
              prefixCls="ant-select"
              transitionName="ant-slide-up"
            >
              <Trigger
                action={Array []}
                afterPopupVisibleChange={[Function]}
                autoDestroy={false}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 0,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                getTriggerDOMNode={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                popup={
                  <div
                    onMouseEnter={[Function]}
                  >
                    <OptionList />
                  </div>
                }
                popupAlign={Object {}}
                popupClassName=""
                popupPlacement="bottomLeft"
                popupStyle={
                  Object {
                    "minWidth": null,
                    "width": null,
                  }
                }
                popupTransitionName="ant-slide-up"
                prefixCls="ant-select-dropdown"
                showAction={Array []}
              >
                <Selector
                  OptionList={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    }
                  }
                  activeDescendantId="rc_select_TEST_OR_SSR_list_0"
                  activeValue={null}
                  className=""
                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                  displayValues={
                    Array [
                      Object {
                        "disabled": undefined,
                        "key": 5,
                        "label": "5",
                        "value": 5,
                      },
                    ]
                  }
                  domRef={
                    Object {
                      "current": <div
                        class="ant-select-selector"
                      >
                        <span
                          class="ant-select-selection-search"
                        >
                          <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            type="search"
                            unselectable="on"
                            value=""
                          />
                        </span>
                        <span
                          class="ant-select-selection-item"
                          title="5"
                        >
                          5
                        </span>
                      </div>,
                    }
                  }
                  dropdownClassName=""
                  dropdownMatchSelectWidth={true}
                  emptyOptions={false}
                  id="rc_select_TEST_OR_SSR"
                  inputElement={null}
                  inputIcon={[Function]}
                  key="trigger"
                  notFoundContent={
                    <Context.Consumer>
                      [Function]
                    </Context.Consumer>
                  }
                  omitDomProps={
                    Array [
                      "inputValue",
                    ]
                  }
                  onDisplayValuesChange={[Function]}
                  onRemove={[Function]}
                  onSearch={[Function]}
                  onSearchSplit={[Function]}
                  onSearchSubmit={[Function]}
                  onToggleOpen={[Function]}
                  placement="bottomLeft"
                  prefixCls="ant-select"
                  removeIcon={<ForwardRef(CloseOutlined) />}
                  searchValue=""
                  showSearch={false}
                  tokenWithEnter={false}
                  transitionName="ant-slide-up"
                  values={
                    Array [
                      Object {
                        "disabled": undefined,
                        "key": 5,
                        "label": "5",
                        "value": 5,
                      },
                    ]
                  }
                >
                  <div
                    className="ant-select-selector"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                  >
                    <SingleSelector
                      OptionList={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        }
                      }
                      activeDescendantId="rc_select_TEST_OR_SSR_list_0"
                      activeValue={null}
                      className=""
                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                      displayValues={
                        Array [
                          Object {
                            "disabled": undefined,
                            "key": 5,
                            "label": "5",
                            "value": 5,
                          },
                        ]
                      }
                      domRef={
                        Object {
                          "current": <div
                            class="ant-select-selector"
                          >
                            <span
                              class="ant-select-selection-search"
                            >
                              <input
                                aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                aria-autocomplete="list"
                                aria-controls="rc_select_TEST_OR_SSR_list"
                                aria-haspopup="listbox"
                                aria-owns="rc_select_TEST_OR_SSR_list"
                                autocomplete="off"
                                class="ant-select-selection-search-input"
                                id="rc_select_TEST_OR_SSR"
                                readonly=""
                                role="combobox"
                                style="opacity: 0;"
                                type="search"
                                unselectable="on"
                                value=""
                              />
                            </span>
                            <span
                              class="ant-select-selection-item"
                              title="5"
                            >
                              5
                            </span>
                          </div>,
                        }
                      }
                      dropdownClassName=""
                      dropdownMatchSelectWidth={true}
                      emptyOptions={false}
                      id="rc_select_TEST_OR_SSR"
                      inputElement={null}
                      inputIcon={[Function]}
                      inputRef={
                        Object {
                          "current": <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autocomplete="off"
                            class="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            readonly=""
                            role="combobox"
                            style="opacity: 0;"
                            type="search"
                            unselectable="on"
                            value=""
                          />,
                        }
                      }
                      notFoundContent={
                        <Context.Consumer>
                          [Function]
                        </Context.Consumer>
                      }
                      omitDomProps={
                        Array [
                          "inputValue",
                        ]
                      }
                      onDisplayValuesChange={[Function]}
                      onInputChange={[Function]}
                      onInputCompositionEnd={[Function]}
                      onInputCompositionStart={[Function]}
                      onInputKeyDown={[Function]}
                      onInputMouseDown={[Function]}
                      onInputPaste={[Function]}
                      onRemove={[Function]}
                      onSearch={[Function]}
                      onSearchSplit={[Function]}
                      onSearchSubmit={[Function]}
                      onToggleOpen={[Function]}
                      placement="bottomLeft"
                      prefixCls="ant-select"
                      removeIcon={<ForwardRef(CloseOutlined) />}
                      searchValue=""
                      showSearch={false}
                      tokenWithEnter={false}
                      transitionName="ant-slide-up"
                      values={
                        Array [
                          Object {
                            "disabled": undefined,
                            "key": 5,
                            "label": "5",
                            "value": 5,
                          },
                        ]
                      }
                    >
                      <span
                        className="ant-select-selection-search"
                      >
                        <Input
                          activeDescendantId="rc_select_TEST_OR_SSR_list_0"
                          attrs={Object {}}
                          editable={false}
                          id="rc_select_TEST_OR_SSR"
                          inputElement={null}
                          onChange={[Function]}
                          onCompositionEnd={[Function]}
                          onCompositionStart={[Function]}
                          onKeyDown={[Function]}
                          onMouseDown={[Function]}
                          onPaste={[Function]}
                          prefixCls="ant-select"
                          value=""
                        >
                          <input
                            aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                            aria-autocomplete="list"
                            aria-controls="rc_select_TEST_OR_SSR_list"
                            aria-haspopup="listbox"
                            aria-owns="rc_select_TEST_OR_SSR_list"
                            autoComplete="off"
                            className="ant-select-selection-search-input"
                            id="rc_select_TEST_OR_SSR"
                            onChange={[Function]}
                            onCompositionEnd={[Function]}
                            onCompositionStart={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onPaste={[Function]}
                            readOnly={true}
                            role="combobox"
                            style={
                              Object {
                                "opacity": 0,
                              }
                            }
                            type="search"
                            unselectable="on"
                            value=""
                          />
                        </Input>
                      </span>
                      <span
                        className="ant-select-selection-item"
                        title="5"
                      >
                        5
                      </span>
                    </SingleSelector>
                  </div>
                </Selector>
              </Trigger>
            </SelectTrigger>
            <TransBtn
              className="ant-select-arrow"
              customizeIcon={[Function]}
              customizeIconProps={
                Object {
                  "focused": false,
                  "loading": undefined,
                  "open": undefined,
                  "searchValue": "",
                  "showSearch": false,
                }
              }
            >
              <span
                aria-hidden={true}
                className="ant-select-arrow"
                onMouseDown={[Function]}
                style={
                  Object {
                    "WebkitUserSelect": "none",
                    "userSelect": "none",
                  }
                }
                unselectable="on"
              >
                <ForwardRef(DownOutlined)
                  className="ant-select-suffix"
                >
                  <AntdIcon
                    className="ant-select-suffix"
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "down",
                        "theme": "outlined",
                      }
                    }
                  >
                    <span
                      aria-label="down"
                      className="anticon anticon-down ant-select-suffix"
                      role="img"
                    >
                      <IconReact
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "down",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          data-icon="down"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-down"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                            key="svg-down-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(DownOutlined)>
              </span>
            </TransBtn>
          </div>
        </BaseSelect>
      </Select>
    </ForwardRef(InternalSelect)>
    <Pagination
      current={1}
      onChange={[Function]}
      pageSize={5}
      showSizeChanger={false}
      total={0}
    >
      <LocaleReceiver
        componentName="Pagination"
        defaultLocale={
          Object {
            "items_per_page": "/ page",
            "jump_to": "Go to",
            "jump_to_confirm": "confirm",
            "next_3": "Next 3 Pages",
            "next_5": "Next 5 Pages",
            "next_page": "Next Page",
            "page": "Page",
            "page_size": "Page Size",
            "prev_3": "Previous 3 Pages",
            "prev_5": "Previous 5 Pages",
            "prev_page": "Previous Page",
          }
        }
      >
        <Pagination
          className=""
          current={1}
          defaultCurrent={1}
          defaultPageSize={10}
          hideOnSinglePage={false}
          itemRender={[Function]}
          jumpNextIcon={
            <a
              className="ant-pagination-item-link"
            >
              <div
                className="ant-pagination-item-container"
              >
                <ForwardRef(DoubleRightOutlined)
                  className="ant-pagination-item-link-icon"
                />
                <span
                  className="ant-pagination-item-ellipsis"
                >
                  •••
                </span>
              </div>
            </a>
          }
          jumpPrevIcon={
            <a
              className="ant-pagination-item-link"
            >
              <div
                className="ant-pagination-item-container"
              >
                <ForwardRef(DoubleLeftOutlined)
                  className="ant-pagination-item-link-icon"
                />
                <span
                  className="ant-pagination-item-ellipsis"
                >
                  •••
                </span>
              </div>
            </a>
          }
          locale={
            Object {
              "items_per_page": "/ page",
              "jump_to": "Go to",
              "jump_to_confirm": "confirm",
              "next_3": "Next 3 Pages",
              "next_5": "Next 5 Pages",
              "next_page": "Next Page",
              "page": "Page",
              "page_size": "Page Size",
              "prev_3": "Previous 3 Pages",
              "prev_5": "Previous 5 Pages",
              "prev_page": "Previous Page",
            }
          }
          nextIcon={
            <button
              className="ant-pagination-item-link"
              tabIndex={-1}
              type="button"
            >
              <ForwardRef(RightOutlined) />
            </button>
          }
          onChange={[Function]}
          onShowSizeChange={[Function]}
          pageSize={5}
          prefixCls="ant-pagination"
          prevIcon={
            <button
              className="ant-pagination-item-link"
              tabIndex={-1}
              type="button"
            >
              <ForwardRef(LeftOutlined) />
            </button>
          }
          selectComponentClass={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "OptGroup": [Function],
              "Option": [Function],
              "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
              "render": [Function],
            }
          }
          selectPrefixCls="ant-select"
          showLessItems={false}
          showPrevNextJumpers={true}
          showQuickJumper={false}
          showSizeChanger={false}
          showTitle={true}
          style={Object {}}
          total={0}
          totalBoundaryShowSizeChanger={50}
        >
          <ul
            className="ant-pagination"
            style={Object {}}
            unselectable="unselectable"
          >
            <li
              aria-disabled={true}
              className="ant-pagination-prev ant-pagination-disabled"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={null}
              title="Previous Page"
            >
              <button
                className="ant-pagination-item-link"
                disabled={true}
                tabIndex={-1}
                type="button"
              >
                <ForwardRef(LeftOutlined)>
                  <AntdIcon
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "left",
                        "theme": "outlined",
                      }
                    }
                  >
                    <span
                      aria-label="left"
                      className="anticon anticon-left"
                      role="img"
                    >
                      <IconReact
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "left",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          data-icon="left"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-left"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z"
                            key="svg-left-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(LeftOutlined)>
              </button>
            </li>
            <Pager
              className="ant-pagination-item-disabled"
              itemRender={[Function]}
              key="noPager"
              locale={
                Object {
                  "items_per_page": "/ page",
                  "jump_to": "Go to",
                  "jump_to_confirm": "confirm",
                  "next_3": "Next 3 Pages",
                  "next_5": "Next 5 Pages",
                  "next_page": "Next Page",
                  "page": "Page",
                  "page_size": "Page Size",
                  "prev_3": "Previous 3 Pages",
                  "prev_5": "Previous 5 Pages",
                  "prev_page": "Previous Page",
                }
              }
              onClick={[Function]}
              onKeyPress={[Function]}
              page={1}
              rootPrefixCls="ant-pagination"
              showTitle={true}
            >
              <li
                className="ant-pagination-item ant-pagination-item-1 ant-pagination-item-disabled"
                onClick={[Function]}
                onKeyPress={[Function]}
                tabIndex="0"
                title={1}
              >
                <a
                  rel="nofollow"
                >
                  1
                </a>
              </li>
            </Pager>
            <li
              aria-disabled={true}
              className="ant-pagination-next ant-pagination-disabled"
              onClick={[Function]}
              onKeyPress={[Function]}
              tabIndex={null}
              title="Next Page"
            >
              <button
                className="ant-pagination-item-link"
                disabled={true}
                tabIndex={-1}
                type="button"
              >
                <ForwardRef(RightOutlined)>
                  <AntdIcon
                    icon={
                      Object {
                        "icon": Object {
                          "attrs": Object {
                            "focusable": "false",
                            "viewBox": "64 64 896 896",
                          },
                          "children": Array [
                            Object {
                              "attrs": Object {
                                "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                              },
                              "tag": "path",
                            },
                          ],
                          "tag": "svg",
                        },
                        "name": "right",
                        "theme": "outlined",
                      }
                    }
                  >
                    <span
                      aria-label="right"
                      className="anticon anticon-right"
                      role="img"
                    >
                      <IconReact
                        icon={
                          Object {
                            "icon": Object {
                              "attrs": Object {
                                "focusable": "false",
                                "viewBox": "64 64 896 896",
                              },
                              "children": Array [
                                Object {
                                  "attrs": Object {
                                    "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                  },
                                  "tag": "path",
                                },
                              ],
                              "tag": "svg",
                            },
                            "name": "right",
                            "theme": "outlined",
                          }
                        }
                      >
                        <svg
                          aria-hidden="true"
                          data-icon="right"
                          fill="currentColor"
                          focusable="false"
                          height="1em"
                          key="svg-right"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                            key="svg-right-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </span>
                  </AntdIcon>
                </ForwardRef(RightOutlined)>
              </button>
            </li>
            <Options
              changeSize={null}
              current={1}
              goButton={false}
              locale={
                Object {
                  "items_per_page": "/ page",
                  "jump_to": "Go to",
                  "jump_to_confirm": "confirm",
                  "next_3": "Next 3 Pages",
                  "next_5": "Next 5 Pages",
                  "next_page": "Next Page",
                  "page": "Page",
                  "page_size": "Page Size",
                  "prev_3": "Previous 3 Pages",
                  "prev_5": "Previous 5 Pages",
                  "prev_page": "Previous Page",
                }
              }
              pageSize={5}
              pageSizeOptions={
                Array [
                  "10",
                  "20",
                  "50",
                  "100",
                ]
              }
              quickGo={null}
              rootPrefixCls="ant-pagination"
              selectComponentClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "OptGroup": [Function],
                  "Option": [Function],
                  "SECRET_COMBOBOX_MODE_DO_NOT_USE": "SECRET_COMBOBOX_MODE_DO_NOT_USE",
                  "render": [Function],
                }
              }
              selectPrefixCls="ant-select"
            />
          </ul>
        </Pagination>
      </LocaleReceiver>
    </Pagination>
  </div>
</EmployeesTable>
`;
